////
//// BoddiMountainView.swift
//// Generated by Core Animator version 1.3.1 on 9/16/16.
////
//// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
////
//
//import UIKit
//
//@IBDesignable
//class BoddiMountainView : UIView {
//    
//    
//    var animationCompletions = Dictionary<CAAnimation, (Bool) -> Void>()
//    var viewsByName: [String : UIView]!
//    
//    // - MARK: Life Cycle
//    
//    convenience init() {
//        self.init(frame: CGRect(x: 0, y: 0, width: 500, height: 900))
//    }
//    
//    override init(frame: CGRect) {
//        super.init(frame: frame)
//        self.setupHierarchy()
//    }
//    
//    required init?(coder aDecoder: NSCoder) {
//        super.init(coder: aDecoder)
//        self.setupHierarchy()
//    }
//    
//    // - MARK: Scaling
//    
//    override func layoutSubviews() {
//        super.layoutSubviews()
//        
//        if let scalingView = self.viewsByName["__scaling__"] {
//            var xScale = self.bounds.size.width / scalingView.bounds.size.width
//            var yScale = self.bounds.size.height / scalingView.bounds.size.height
//            switch contentMode {
//            case .scaleToFill:
//                break
//            case .scaleAspectFill:
//                let scale = max(xScale, yScale)
//                xScale = scale
//                yScale = scale
//            default:
//                let scale = min(xScale, yScale)
//                xScale = scale
//                yScale = scale
//            }
//            scalingView.transform = CGAffineTransform(scaleX: xScale, y: yScale)
//            scalingView.center = CGPoint(x:self.bounds.midX, y:self.bounds.midY)
//        }
//    }
//    
//    // - MARK: Setup
//    
//    func setupHierarchy() {
//        var viewsByName: [String : UIView] = [:]
//        let bundle = Bundle(for:type(of: self))
//        let __scaling__ = UIView()
//        __scaling__.bounds = CGRect(x:0, y:0, width:500, height:900)
//        __scaling__.center = CGPoint(x:250.0, y:450.0)
//        self.addSubview(__scaling__)
//        viewsByName["__scaling__"] = __scaling__
//        
//        let mountain2 = UIImageView()
//        mountain2.bounds = CGRect(x:0, y:0, width:500.0, height:900.0)
//        var imgMontanha2: UIImage!
//        if let imagePath = bundle.path(forResource: "montanha2.png", ofType:nil) {
//            imgMontanha2 = UIImage(contentsOfFile:imagePath)
//        }else {
//            print("** Warning: Could not create image from 'montanha2.png'. Please make sure that it is added to the project directly (not in a folder reference).")
//        }
//        mountain2.image = imgMontanha2
//        mountain2.contentMode = .center
//        mountain2.layer.position = CGPoint(x:250.000, y:450.000)
//        __scaling__.addSubview(mountain2)
//        viewsByName["mountain2"] = mountain2
//        
//        let boddiHappyMountain = UIImageView()
//        boddiHappyMountain.bounds = CGRect(x:0, y:0, width:200.0, height:200.0)
//        var imgBoddiHappyMountain: UIImage!
//        if let imagePath = bundle.path(forResource: "boddi_happyMountain.png", ofType:nil) {
//            imgBoddiHappyMountain = UIImage(contentsOfFile:imagePath)
//        }else {
//            print("** Warning: Could not create image from 'boddi_happyMountain.png'. Please make sure that it is added to the project directly (not in a folder reference).")
//        }
//        boddiHappyMountain.image = imgBoddiHappyMountain
//        boddiHappyMountain.contentMode = .center
//        boddiHappyMountain.layer.position = CGPoint(x:250.000, y:450.000)
//        boddiHappyMountain.alpha = 0.00
//        __scaling__.addSubview(boddiHappyMountain)
//        viewsByName["boddi_happyMountain"] = boddiHappyMountain
//        
//        let boddiClimbingMountain = UIImageView()
//        boddiClimbingMountain.bounds = CGRect(x:0, y:0, width:200.0, height:200.0)
//        var imgBoddiSubindoMontanha: UIImage!
//        if let imagePath = bundle.path(forResource: "boddi_subindoMontanha.png", ofType:nil) {
//            imgBoddiSubindoMontanha = UIImage(contentsOfFile:imagePath)
//        }else {
//            print("** Warning: Could not create image from 'boddi_subindoMontanha.png'. Please make sure that it is added to the project directly (not in a folder reference).")
//        }
//        boddiClimbingMountain.image = imgBoddiSubindoMontanha
//        boddiClimbingMountain.contentMode = .center
//        boddiClimbingMountain.layer.position = CGPoint(x:100.000, y:704.883)
//        boddiClimbingMountain.alpha = 0.00
//        __scaling__.addSubview(boddiClimbingMountain)
//        viewsByName["boddi_climbingMountain"] = boddiClimbingMountain
//        
//        self.viewsByName = viewsByName
//    }
//    
//    // - MARK: climbingBigMountain
//    
//    func addClimbingBigMountainAnimation() {
//        addClimbingBigMountainAnimationWithBeginTime(0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
//    }
//    
//    func addClimbingBigMountainAnimation(_ completion: ((Bool) -> Void)?) {
//        addClimbingBigMountainAnimationWithBeginTime(0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
//    }
//    
//    func addClimbingBigMountainAnimation(removedOnCompletion: Bool) {
//        addClimbingBigMountainAnimationWithBeginTime(0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
//    }
//    
//    func addClimbingBigMountainAnimation(removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
//        addClimbingBigMountainAnimationWithBeginTime(0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
//    }
//    
//    func addClimbingBigMountainAnimationWithBeginTime(_ beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
//        let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
//        let anticOverTiming = CAMediaTimingFunction(controlPoints: 0.42, -0.30, 0.58, 1.30)
//        let easeOutTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseOut)
//        let easeInTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseIn)
//        let instantTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionDefault)
//        if let complete = completion {
//            let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
//            representativeAnimation.duration = 3.050
//            representativeAnimation.delegate = self
//            self.layer.add(representativeAnimation, forKey: "ClimbingBigMountain")
//            self.animationCompletions[layer.animation(forKey: "ClimbingBigMountain")!] = complete
//        }
//        
//        let mountain2TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
//        mountain2TranslationXAnimation.duration = 3.050
//        mountain2TranslationXAnimation.values = [0.000 as Float, 0.000 as Float]
//        mountain2TranslationXAnimation.keyTimes = [NSNumber(0.000 as Float), 1.000 as Float]
//        mountain2TranslationXAnimation.timingFunctions = [linearTiming]
//        mountain2TranslationXAnimation.beginTime = beginTime
//        mountain2TranslationXAnimation.fillMode = fillMode
//        mountain2TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["mountain2"]?.layer.add(mountain2TranslationXAnimation, forKey:"climbingBigMountain_TranslationX")
//        
//        let mountain2TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
//        mountain2TranslationYAnimation.duration = 3.050
//        mountain2TranslationYAnimation.values = [0.000 as Float, 0.000 as Float]
//        mountain2TranslationYAnimation.keyTimes = [NSNumber(0.000 as Float), 1.000 as Float]
//        mountain2TranslationYAnimation.timingFunctions = [linearTiming]
//        mountain2TranslationYAnimation.beginTime = beginTime
//        mountain2TranslationYAnimation.fillMode = fillMode
//        mountain2TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["mountain2"]?.layer.add(mountain2TranslationYAnimation, forKey:"climbingBigMountain_TranslationY")
//        
//        let boddiClimbingMountainRotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
//        boddiClimbingMountainRotationAnimation.duration = 3.050
//        boddiClimbingMountainRotationAnimation.values = [-0.456 as Float, -0.591 as Float, 0.073 as Float, 0.073 as Float]
//        boddiClimbingMountainRotationAnimation.keyTimes = [NSNumber(0.000 as Float), 0.004 as Float, 0.725 as Float, 1.000 as Float]
//        boddiClimbingMountainRotationAnimation.timingFunctions = [easeOutTiming, anticOverTiming, linearTiming]
//        boddiClimbingMountainRotationAnimation.beginTime = beginTime
//        boddiClimbingMountainRotationAnimation.fillMode = fillMode
//        boddiClimbingMountainRotationAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_climbingMountain"]?.layer.add(boddiClimbingMountainRotationAnimation, forKey:"climbingBigMountain_Rotation")
//        
//        let boddiClimbingMountainOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
//        boddiClimbingMountainOpacityAnimation.duration = 3.050
//        boddiClimbingMountainOpacityAnimation.values = [0.050 as Float, 1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
//        boddiClimbingMountainOpacityAnimation.keyTimes = [NSNumber(0.000 as Float), 0.009 as Float, 0.731 as Float, 0.731 as Float, 1.000 as Float]
//        boddiClimbingMountainOpacityAnimation.timingFunctions = [easeInTiming, instantTiming, instantTiming, linearTiming]
//        boddiClimbingMountainOpacityAnimation.beginTime = beginTime
//        boddiClimbingMountainOpacityAnimation.fillMode = fillMode
//        boddiClimbingMountainOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_climbingMountain"]?.layer.add(boddiClimbingMountainOpacityAnimation, forKey:"climbingBigMountain_Opacity")
//        
//        let boddiClimbingMountainTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
//        boddiClimbingMountainTranslationXAnimation.duration = 3.050
//        boddiClimbingMountainTranslationXAnimation.values = [0.000 as Float, 0.000 as Float, 0.000 as Float, -16.876 as Float, 3.276 as Float, 9.840 as Float, 14.757 as Float, 19.674 as Float, 34.431 as Float, 40.995 as Float, 49.194 as Float, 60.668 as Float, 68.867 as Float, 72.149 as Float, 75.425 as Float, 79.254 as Float, 82.530 as Float, 84.171 as Float, 85.265 as Float, 86.906 as Float, 88.480 as Float, 88.480 as Float, 88.480 as Float, 88.480 as Float, 88.480 as Float, 83.624 as Float, 73.790 as Float, 62.309 as Float, 60.668 as Float, 67.226 as Float, 81.983 as Float, 88.547 as Float, 104.945 as Float, 111.503 as Float, 126.260 as Float, 139.376 as Float, 147.575 as Float, 149.216 as Float, 151.951 as Float, 153.585 as Float, 155.159 as Float, 155.159 as Float, 155.159 as Float, 155.159 as Float, 155.159 as Float, 142.584 as Float, 126.186 as Float, 121.269 as Float, 119.628 as Float, 134.385 as Float, 154.065 as Float, 177.021 as Float, 191.777 as Float, 201.617 as Float, 204.893 as Float, 206.534 as Float, 208.175 as Float, 209.816 as Float, 211.451 as Float, 211.451 as Float, 211.451 as Float, 211.451 as Float]
//        boddiClimbingMountainTranslationXAnimation.keyTimes = [NSNumber(0.000 as Float), 0.001 as Float, 0.002 as Float, 0.069 as Float, 0.071 as Float, 0.080 as Float, 0.089 as Float, 0.097 as Float, 0.105 as Float, 0.111 as Float, 0.121 as Float, 0.132 as Float, 0.138 as Float, 0.146 as Float, 0.155 as Float, 0.173 as Float, 0.187 as Float, 0.192 as Float, 0.203 as Float, 0.208 as Float, 0.215 as Float, 0.232 as Float, 0.232 as Float, 0.234 as Float, 0.234 as Float, 0.285 as Float, 0.294 as Float, 0.302 as Float, 0.312 as Float, 0.342 as Float, 0.348 as Float, 0.357 as Float, 0.370 as Float, 0.375 as Float, 0.387 as Float, 0.398 as Float, 0.407 as Float, 0.413 as Float, 0.424 as Float, 0.430 as Float, 0.463 as Float, 0.476 as Float, 0.476 as Float, 0.479 as Float, 0.479 as Float, 0.536 as Float, 0.547 as Float, 0.556 as Float, 0.567 as Float, 0.578 as Float, 0.588 as Float, 0.602 as Float, 0.609 as Float, 0.624 as Float, 0.632 as Float, 0.644 as Float, 0.656 as Float, 0.666 as Float, 0.675 as Float, 0.719 as Float, 0.719 as Float, 1.000 as Float]
//        boddiClimbingMountainTranslationXAnimation.timingFunctions = [instantTiming, instantTiming, easeOutTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming]
//        boddiClimbingMountainTranslationXAnimation.beginTime = beginTime
//        boddiClimbingMountainTranslationXAnimation.fillMode = fillMode
//        boddiClimbingMountainTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_climbingMountain"]?.layer.add(boddiClimbingMountainTranslationXAnimation, forKey:"climbingBigMountain_TranslationX")
//        
//        let boddiClimbingMountainTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
//        boddiClimbingMountainTranslationYAnimation.duration = 3.050
//        boddiClimbingMountainTranslationYAnimation.values = [0.000 as Float, 0.000 as Float, 0.000 as Float, -3.214 as Float, -11.413 as Float, -22.888 as Float, -50.767 as Float, -68.800 as Float, -75.364 as Float, -81.922 as Float, -96.678 as Float, -103.236 as Float, -111.435 as Float, -120.181 as Float, -126.739 as Float, -126.739 as Float, -126.739 as Float, -126.739 as Float, -126.739 as Float, -130.015 as Float, -146.413 as Float, -172.651 as Float, -189.049 as Float, -207.081 as Float, -231.678 as Float, -246.982 as Float, -250.264 as Float, -253.546 as Float, -255.181 as Float, -256.822 as Float, -258.463 as Float, -256.822 as Float, -253.546 as Float, -252.452 as Float, -250.879 as Float, -250.879 as Float, -250.879 as Float, -250.879 as Float, -250.879 as Float, -259.077 as Float, -290.232 as Float, -308.271 as Float, -341.061 as Float, -370.580 as Float, -388.613 as Float, -400.094 as Float, -403.376 as Float, -400.094 as Float, -398.453 as Float, -397.359 as Float, -395.718 as Float, -394.630 as Float, -393.057 as Float, -393.057 as Float, -393.057 as Float, -393.057 as Float]
//        boddiClimbingMountainTranslationYAnimation.keyTimes = [NSNumber(0.000 as Float), 0.001 as Float, 0.002 as Float, 0.052 as Float, 0.056 as Float, 0.063 as Float, 0.071 as Float, 0.080 as Float, 0.089 as Float, 0.097 as Float, 0.105 as Float, 0.111 as Float, 0.121 as Float, 0.132 as Float, 0.138 as Float, 0.232 as Float, 0.232 as Float, 0.234 as Float, 0.234 as Float, 0.285 as Float, 0.294 as Float, 0.302 as Float, 0.312 as Float, 0.321 as Float, 0.342 as Float, 0.348 as Float, 0.357 as Float, 0.370 as Float, 0.375 as Float, 0.387 as Float, 0.398 as Float, 0.424 as Float, 0.430 as Float, 0.442 as Float, 0.463 as Float, 0.476 as Float, 0.476 as Float, 0.479 as Float, 0.479 as Float, 0.536 as Float, 0.547 as Float, 0.556 as Float, 0.567 as Float, 0.578 as Float, 0.588 as Float, 0.602 as Float, 0.609 as Float, 0.644 as Float, 0.656 as Float, 0.666 as Float, 0.675 as Float, 0.688 as Float, 0.698 as Float, 0.719 as Float, 0.719 as Float, 1.000 as Float]
//        boddiClimbingMountainTranslationYAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, instantTiming, instantTiming, linearTiming]
//        boddiClimbingMountainTranslationYAnimation.beginTime = beginTime
//        boddiClimbingMountainTranslationYAnimation.fillMode = fillMode
//        boddiClimbingMountainTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_climbingMountain"]?.layer.add(boddiClimbingMountainTranslationYAnimation, forKey:"climbingBigMountain_TranslationY")
//        
//        let boddiHappyMountainRotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
//        boddiHappyMountainRotationAnimation.duration = 3.050
//        boddiHappyMountainRotationAnimation.values = [0.000 as Float, -0.131 as Float, -0.131 as Float]
//        boddiHappyMountainRotationAnimation.keyTimes = [NSNumber(0.000 as Float), 0.731 as Float, 1.000 as Float]
//        boddiHappyMountainRotationAnimation.timingFunctions = [easeOutTiming, linearTiming]
//        boddiHappyMountainRotationAnimation.beginTime = beginTime
//        boddiHappyMountainRotationAnimation.fillMode = fillMode
//        boddiHappyMountainRotationAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_happyMountain"]?.layer.add(boddiHappyMountainRotationAnimation, forKey:"climbingBigMountain_Rotation")
//        
//        let boddiHappyMountainOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
//        boddiHappyMountainOpacityAnimation.duration = 3.050
//        boddiHappyMountainOpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
//        boddiHappyMountainOpacityAnimation.keyTimes = [NSNumber(0.000 as Float), 0.731 as Float, 0.731 as Float, 1.000 as Float]
//        boddiHappyMountainOpacityAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming]
//        boddiHappyMountainOpacityAnimation.beginTime = beginTime
//        boddiHappyMountainOpacityAnimation.fillMode = fillMode
//        boddiHappyMountainOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_happyMountain"]?.layer.add(boddiHappyMountainOpacityAnimation, forKey:"climbingBigMountain_Opacity")
//        
//        let boddiHappyMountainTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
//        boddiHappyMountainTranslationXAnimation.duration = 3.050
//        boddiHappyMountainTranslationXAnimation.values = [58.000 as Float, 58.963 as Float, 59.963 as Float, 65.433 as Float, 65.433 as Float]
//        boddiHappyMountainTranslationXAnimation.keyTimes = [NSNumber(0.000 as Float), 0.719 as Float, 0.731 as Float, 0.803 as Float, 1.000 as Float]
//        boddiHappyMountainTranslationXAnimation.timingFunctions = [easeOutTiming, easeOutTiming, easeOutTiming, linearTiming]
//        boddiHappyMountainTranslationXAnimation.beginTime = beginTime
//        boddiHappyMountainTranslationXAnimation.fillMode = fillMode
//        boddiHappyMountainTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_happyMountain"]?.layer.add(boddiHappyMountainTranslationXAnimation, forKey:"climbingBigMountain_TranslationX")
//        
//        let boddiHappyMountainTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
//        boddiHappyMountainTranslationYAnimation.duration = 3.050
//        boddiHappyMountainTranslationYAnimation.values = [-130.000 as Float, -130.407 as Float, -136.407 as Float, -235.421 as Float, -136.000 as Float, -236.000 as Float, -136.000 as Float]
//        boddiHappyMountainTranslationYAnimation.keyTimes = [NSNumber(0.000 as Float), 0.719 as Float, 0.731 as Float, 0.803 as Float, 0.869 as Float, 0.934 as Float, 1.000 as Float]
//        boddiHappyMountainTranslationYAnimation.timingFunctions = [easeOutTiming, easeOutTiming, easeOutTiming, anticOverTiming, easeOutTiming, anticOverTiming]
//        boddiHappyMountainTranslationYAnimation.beginTime = beginTime
//        boddiHappyMountainTranslationYAnimation.fillMode = fillMode
//        boddiHappyMountainTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_happyMountain"]?.layer.add(boddiHappyMountainTranslationYAnimation, forKey:"climbingBigMountain_TranslationY")
//    }
//    
//    func removeClimbingBigMountainAnimation() {
//        self.layer.removeAnimation(forKey: "ClimbingBigMountain")
//        self.viewsByName["mountain2"]?.layer.removeAnimation(forKey: "climbingBigMountain_TranslationX")
//        self.viewsByName["mountain2"]?.layer.removeAnimation(forKey: "climbingBigMountain_TranslationY")
//        self.viewsByName["boddi_climbingMountain"]?.layer.removeAnimation(forKey: "climbingBigMountain_Rotation")
//        self.viewsByName["boddi_climbingMountain"]?.layer.removeAnimation(forKey: "climbingBigMountain_Opacity")
//        self.viewsByName["boddi_climbingMountain"]?.layer.removeAnimation(forKey: "climbingBigMountain_TranslationX")
//        self.viewsByName["boddi_climbingMountain"]?.layer.removeAnimation(forKey: "climbingBigMountain_TranslationY")
//        self.viewsByName["boddi_happyMountain"]?.layer.removeAnimation(forKey: "climbingBigMountain_Rotation")
//        self.viewsByName["boddi_happyMountain"]?.layer.removeAnimation(forKey: "climbingBigMountain_Opacity")
//        self.viewsByName["boddi_happyMountain"]?.layer.removeAnimation(forKey: "climbingBigMountain_TranslationX")
//        self.viewsByName["boddi_happyMountain"]?.layer.removeAnimation(forKey: "climbingBigMountain_TranslationY")
//    }
//    
//    // - MARK: happyCycleMountain
//    
//    func addHappyCycleMountainAnimation() {
//        addHappyCycleMountainAnimationWithBeginTime(0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
//    }
//    
//    func addHappyCycleMountainAnimation(_ completion: ((Bool) -> Void)?) {
//        addHappyCycleMountainAnimationWithBeginTime(0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
//    }
//    
//    func addHappyCycleMountainAnimation(removedOnCompletion: Bool) {
//        addHappyCycleMountainAnimationWithBeginTime(0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
//    }
//    
//    func addHappyCycleMountainAnimation(removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
//        addHappyCycleMountainAnimationWithBeginTime(0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
//    }
//    
//    func addHappyCycleMountainAnimationWithBeginTime(_ beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
//        let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
//        let easeInTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseIn)
//        let easeOutTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseOut)
//        if let complete = completion {
//            let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
//            representativeAnimation.duration = 6.020
//            representativeAnimation.delegate = self
//            self.layer.add(representativeAnimation, forKey: "HappyCycleMountain")
//            self.animationCompletions[layer.animation(forKey: "HappyCycleMountain")!] = complete
//        }
//        
//        let mountain2TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
//        mountain2TranslationXAnimation.duration = 6.020
//        mountain2TranslationXAnimation.values = [0.000 as Float, 0.000 as Float]
//        mountain2TranslationXAnimation.keyTimes = [NSNumber(0.000 as Float), 1.000 as Float]
//        mountain2TranslationXAnimation.timingFunctions = [linearTiming]
//        mountain2TranslationXAnimation.beginTime = beginTime
//        mountain2TranslationXAnimation.fillMode = fillMode
//        mountain2TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["mountain2"]?.layer.add(mountain2TranslationXAnimation, forKey:"happyCycleMountain_TranslationX")
//        
//        let mountain2TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
//        mountain2TranslationYAnimation.duration = 6.020
//        mountain2TranslationYAnimation.values = [0.000 as Float, 0.000 as Float]
//        mountain2TranslationYAnimation.keyTimes = [NSNumber(0.000 as Float), 1.000 as Float]
//        mountain2TranslationYAnimation.timingFunctions = [linearTiming]
//        mountain2TranslationYAnimation.beginTime = beginTime
//        mountain2TranslationYAnimation.fillMode = fillMode
//        mountain2TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["mountain2"]?.layer.add(mountain2TranslationYAnimation, forKey:"happyCycleMountain_TranslationY")
//        
//        let boddiHappyMountainRotationAnimation = CAKeyframeAnimation(keyPath: "transform.rotation.z")
//        boddiHappyMountainRotationAnimation.duration = 6.020
//        boddiHappyMountainRotationAnimation.values = [0.000 as Float, 0.142 as Float, 0.000 as Float, -0.133 as Float, 0.000 as Float]
//        boddiHappyMountainRotationAnimation.keyTimes = [NSNumber(0.000 as Float), 0.252 as Float, 0.498 as Float, 0.751 as Float, 1.000 as Float]
//        boddiHappyMountainRotationAnimation.timingFunctions = [easeOutTiming, easeInTiming, easeOutTiming, easeInTiming]
//        boddiHappyMountainRotationAnimation.repeatCount = HUGE
//        boddiHappyMountainRotationAnimation.beginTime = beginTime
//        boddiHappyMountainRotationAnimation.fillMode = fillMode
//        boddiHappyMountainRotationAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_happyMountain"]?.layer.add(boddiHappyMountainRotationAnimation, forKey:"happyCycleMountain_Rotation")
//        
//        let boddiHappyMountainOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
//        boddiHappyMountainOpacityAnimation.duration = 6.020
//        boddiHappyMountainOpacityAnimation.values = [1.000 as Float, 1.000 as Float]
//        boddiHappyMountainOpacityAnimation.keyTimes = [NSNumber(0.000 as Float), 1.000 as Float]
//        boddiHappyMountainOpacityAnimation.timingFunctions = [linearTiming]
//        boddiHappyMountainOpacityAnimation.beginTime = beginTime
//        boddiHappyMountainOpacityAnimation.fillMode = fillMode
//        boddiHappyMountainOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_happyMountain"]?.layer.add(boddiHappyMountainOpacityAnimation, forKey:"happyCycleMountain_Opacity")
//        
//        let boddiHappyMountainTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
//        boddiHappyMountainTranslationXAnimation.duration = 6.020
//        boddiHappyMountainTranslationXAnimation.values = [58.000 as Float, 85.000 as Float, 85.000 as Float]
//        boddiHappyMountainTranslationXAnimation.keyTimes = [NSNumber(0.000 as Float), 0.017 as Float, 1.000 as Float]
//        boddiHappyMountainTranslationXAnimation.timingFunctions = [easeOutTiming, linearTiming]
//        boddiHappyMountainTranslationXAnimation.beginTime = beginTime
//        boddiHappyMountainTranslationXAnimation.fillMode = fillMode
//        boddiHappyMountainTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_happyMountain"]?.layer.add(boddiHappyMountainTranslationXAnimation, forKey:"happyCycleMountain_TranslationX")
//        
//        let boddiHappyMountainTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
//        boddiHappyMountainTranslationYAnimation.duration = 6.020
//        boddiHappyMountainTranslationYAnimation.values = [-130.000 as Float, -130.000 as Float]
//        boddiHappyMountainTranslationYAnimation.keyTimes = [NSNumber(0.000 as Float), 1.000 as Float]
//        boddiHappyMountainTranslationYAnimation.timingFunctions = [linearTiming]
//        boddiHappyMountainTranslationYAnimation.beginTime = beginTime
//        boddiHappyMountainTranslationYAnimation.fillMode = fillMode
//        boddiHappyMountainTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
//        self.viewsByName["boddi_happyMountain"]?.layer.add(boddiHappyMountainTranslationYAnimation, forKey:"happyCycleMountain_TranslationY")
//    }
//    
//    func removeHappyCycleMountainAnimation() {
//        self.layer.removeAnimation(forKey: "HappyCycleMountain")
//        self.viewsByName["mountain2"]?.layer.removeAnimation(forKey: "happyCycleMountain_TranslationX")
//        self.viewsByName["mountain2"]?.layer.removeAnimation(forKey: "happyCycleMountain_TranslationY")
//        self.viewsByName["boddi_happyMountain"]?.layer.removeAnimation(forKey: "happyCycleMountain_Rotation")
//        self.viewsByName["boddi_happyMountain"]?.layer.removeAnimation(forKey: "happyCycleMountain_Opacity")
//        self.viewsByName["boddi_happyMountain"]?.layer.removeAnimation(forKey: "happyCycleMountain_TranslationX")
//        self.viewsByName["boddi_happyMountain"]?.layer.removeAnimation(forKey: "happyCycleMountain_TranslationY")
//    }
//    
//    override func animationDidStop(_ anim: CAAnimation, finished flag: Bool) {
//        if let completion = self.animationCompletions[anim] {
//            self.animationCompletions.removeValue(forKey: anim)
//            completion(flag)
//        }
//    }
//    
//    func removeAllAnimations() {
//        for subview in viewsByName.values {
//            subview.layer.removeAllAnimations()
//        }
//        self.layer.removeAnimation(forKey: "ClimbingBigMountain")
//        self.layer.removeAnimation(forKey: "HappyCycleMountain")
//    }
//}
